// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String              @id @default(uuid())
  email                String?             @unique
  name                 String?
  number               String              @unique
  password             String
  onRampTransactions   OnRampTransaction[]
  balance              Balance[]
  sentTransactions     ptopTransfer[]      @relation(name: "senderRelation")
  receivedTransactions ptopTransfer[]      @relation(name: "receiverRelation")
}

model Merchant {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model OnRampTransaction {
  id        String       @id @default(uuid())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    String
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     String @id @default(uuid())
  userId String @unique
  amount Int
  locked Int
  user   User   @relation(fields: [userId], references: [id])
}

model ptopTransfer {
  id         String   @id @default(uuid())
  amount     Int
  timestamp  DateTime 
  receiverId String
  receiver   User     @relation(name: "receiverRelation", fields: [receiverId], references: [id])
  senderId   String
  sender     User     @relation(name: "senderRelation", fields: [senderId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
